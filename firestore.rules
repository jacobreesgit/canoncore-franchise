rules_version = '2';
  service cloud.firestore {
    match /databases/{database}/documents {
      match /users/{userId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
      match /universes/{universeId} {
        allow read: if request.auth != null && (
          resource == null || 
          resource.data.isPublic == true || 
          request.auth.uid == resource.data.userId
        );
        allow write, delete: if request.auth != null && 
          resource != null && 
          request.auth.uid == resource.data.userId;
        allow create: if request.auth != null;
      }
      match /content/{contentId} {
        allow read: if request.auth != null;
        allow write, delete: if request.auth != null && 
          resource != null && 
          request.auth.uid == resource.data.userId;
        allow create: if request.auth != null;
      }
      match /favourites/{favouriteId} {
        allow read, write: if request.auth != null && (
          resource == null ||
          request.auth.uid == resource.data.userId
        );
        allow create: if request.auth != null &&
          request.auth.uid == request.resource.data.userId;
      }
      match /contentRelationships/{relationId} {
        allow read: if request.auth != null;
        allow write, delete: if request.auth != null && 
          resource != null && 
          request.auth.uid == resource.data.userId;
        allow create: if request.auth != null;
      }
      match /userProgress/{userProgressId} {
        allow read, write: if request.auth != null && (
          resource == null || 
          request.auth.uid == resource.data.userId
        );
        allow create: if request.auth != null && 
          request.auth.uid == request.resource.data.userId;
      }
    }
  }